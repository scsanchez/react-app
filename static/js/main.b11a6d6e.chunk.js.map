{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","name","setName","userName","setUserName","repositories","setRepositories","setRepositoriesUrl","organisations","setOrganisations","userInput","setUserInput","setError","console","log","className","Form","onSubmit","e","preventDefault","fetch","concat","then","res","json","data","message","login","repos_url","html_url","organizations_url","setData","Row","Col","Label","htmlFor","visuallyHidden","Control","sm","id","placeholder","onChange","target","value","Button","type","Card","style","width","Body","Title","Text","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAiGeA,MA7Ff,WACI,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAA8CN,mBAAS,IAAvD,mBAAwBO,GAAxB,WACA,EAA0CP,mBAAS,IAAnD,mBAAOQ,EAAP,KAAsBC,EAAtB,KACA,EAAkCT,mBAAS,IAA3C,mBAAOU,EAAP,KAAkBC,EAAlB,KACA,EAA0BX,mBAAS,IAAnC,mBAAcY,GAAd,WA+CA,OAxBAC,QAAQC,IAAIJ,GAyBR,sBAAKK,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,cAACC,EAAA,EAAD,CAAMC,SAzBG,SAACC,GAClBA,EAAEC,iBACFC,MAAM,gCAAgCC,OAAOX,IACxCY,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACEA,EAAKC,QACLd,EAASa,EAAKC,SA7Bd,SAAC,GAMV,IALHzB,EAKE,EALFA,KACA0B,EAIE,EAJFA,MACAC,EAGE,EAHFA,UACAC,EAEE,EAFFA,SACAC,EACE,EADFA,kBAEA5B,EAAQD,GAERG,EAAYuB,GAEZrB,EAAgBsB,GAChBf,QAAQC,IAAIc,GACZnB,EAAiBqB,GACjBvB,EAAmBsB,GACnBhB,QAAQC,IAAIe,GAgBAE,CAAQN,OAiBZ,SACI,eAACO,EAAA,EAAD,CAAKjB,UAAU,qBAAf,UACI,eAACkB,EAAA,EAAD,CAAKlB,UAAU,OAAf,UACI,cAACC,EAAA,EAAKkB,MAAN,CACIC,QAAQ,sBACRC,gBAAc,EAFlB,kBAKA,cAACpB,EAAA,EAAKqB,QAAN,CACIC,GAAI,EACJC,GAAG,sBACHC,YAAY,WACZC,SA1CP,SAAAvB,GACjBP,EAAaO,EAAEwB,OAAOC,aA4CN,cAACV,EAAA,EAAD,CAAKK,GAAI,EAAGvB,UAAU,OAAtB,SACI,cAAC6B,EAAA,EAAD,CAAQC,KAAK,SAAb,6BAKhB,qBAAK9B,UAAU,OAAf,SACI,cAAC+B,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,SACI,eAACF,EAAA,EAAKG,KAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAa/C,IACb,cAAC2C,EAAA,EAAKI,MAAN,UAAajD,IACb,cAAC6C,EAAA,EAAKK,KAAN,UAAY9C,IACZ,cAACyC,EAAA,EAAKK,KAAN,UAAY3C,WAIxB,wBAAQO,UAAU,mBChFfqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b11a6d6e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Card, Form, Col, Row } from \"react-bootstrap\";\n\nfunction App() {\n    const [name, setName] = useState(\"\");\n    const [userName, setUserName] = useState(\"\");\n    const [repositories, setRepositories] = useState(\"\");\n    const [repositoriesUrl, setRepositoriesUrl] = useState(\"\");\n    const [organisations, setOrganisations] = useState(\"\");\n    const [userInput, setUserInput] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const setData = ({\n        name,\n        login,\n        repos_url,\n        html_url,\n        organizations_url\n    }) => {\n        setName(name);\n       \n        setUserName(login);\n     \n        setRepositories(repos_url);\n        console.log(repos_url);\n        setOrganisations(organizations_url);\n        setRepositoriesUrl(html_url);\n        console.log(html_url);\n    };\n\n    const handleSearch = e => {\n        setUserInput(e.target.value);\n    };\n    console.log(userInput);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        fetch(\"https://api.github.com/users/\".concat(userInput))\n            .then(res => res.json())\n            .then(data => {\n                if (data.message) {\n                    setError(data.message);\n                } else {\n                    setData(data);\n                }\n            });\n    };\n\n    // useEffect(() => {\n    // \tfetch(\"https://api.github.com/users/scsanchez\")\n    // \t\t.then(res => res.json())\n    // \t\t.then(data => {\n    // \t\t\tconsole.log(data);\n    // \t\t\tsetData(data);\n    // \t\t});\n    // }, []);\n\n    return (\n        <div className=\"App\">\n            <div className=\"input\">\n                <Form onSubmit={handleSubmit}>\n                    <Row className=\"align-items-center\">\n                        <Col className=\"my-1\">\n                            <Form.Label\n                                htmlFor=\"inlineFormInputName\"\n                                visuallyHidden>\n                                Name\n\t\t\t\t\t\t\t</Form.Label>\n                            <Form.Control\n                                sm={3}\n                                id=\"inlineFormInputName\"\n                                placeholder=\"Username\"\n                                onChange={handleSearch}\n                            />\n                        </Col>\n                        <Col sm={3} className=\"my-1\">\n                            <Button type=\"submit\">Submit</Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n            <div className=\"card\">\n                <Card style={{ width: \"18rem\" }}>\n                    <Card.Body>\n                        <Card.Title>{userName}</Card.Title>\n                        <Card.Title>{name}</Card.Title>\n                        <Card.Text>{repositories}</Card.Text>\n                        <Card.Text>{organisations}</Card.Text>\n                    </Card.Body>\n                </Card>\n            </div>\n            <header className=\"App-header\"></header>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}