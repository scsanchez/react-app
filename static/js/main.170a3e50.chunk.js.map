{"version":3,"sources":["component/Navbar.jsx","component/Card-repositories.jsx","component/Card-organisations.jsx","App.js","reportWebVitals.js","index.js"],"names":["MyNavBar","Navbar","bg","variant","Brand","href","src","width","height","className","alt","MyCardRepositories","props","data","Card","Body","Title","name","Text","description","Button","html_url","target","MyCardOrganisations","login","App","useState","userInput","setUserInput","arrayRepos","setArrayRepos","arrayOrganisations","setArrayOrganisations","Form","onSubmit","e","preventDefault","fetch","then","response","ok","Error","statusText","json","responseAsJson","catch","error","console","log","Row","Col","Label","htmlFor","visuallyHidden","Control","id","placeholder","onChange","value","type","map","index","Spinner","animation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.170a3e50.chunk.js","sourcesContent":["import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\n\nconst MyNavBar = () => {\n    return (\n        <Navbar bg=\"primary\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">\n                <img\n                    src=\"https://github.githubassets.com/images/modules/logos_page/Octocat.png\"\n                    width=\"80\"\n                    height=\"60\"\n                    className=\"d-inline-block align-items-center\"\n                    alt=\"Octopus GitHub\"\n                />\n                <img\n                    src=\"https://github.githubassets.com/images/modules/logos_page/GitHub-Logo.png\"\n                    width=\"80\"\n                    height=\"21\"\n                    className=\"d-inline-block align-items-center\"\n                    alt=\"GitHub\"\n                />\n            </Navbar.Brand>\n        </Navbar>\n    );\n};\nexport default MyNavBar;","import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\n\nconst MyCardRepositories = (props) => {\n    const data = props.data\n    return (\n        <Card className= \"card inline-block\">\n            <Card.Body>\n                <Card.Title>{data.name}</Card.Title>\n                <Card.Text>{data.description}</Card.Text>\n                <Button href={data.html_url} target=\"_blank\" variant=\"primary\" text-center>Repositorie Page</Button>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default MyCardRepositories;\n\n","import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\n\nconst MyCardOrganisations = (props) => {\n    const data = props.data\n    const login =props.data.login\n    return (\n        <Card className= \"card inline\">\n            <Card.Body>\n                <Card.Title>{data.login}</Card.Title>\n                <Card.Text>{data.description}</Card.Text>\n                <Button href={\"https://github.com/orgs/\"+ login} target=\"_blank\" variant=\"primary\" text-center>Organisation Page</Button>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default MyCardOrganisations;\n\n","import React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Form, Col, Row } from \"react-bootstrap\";\nimport MyNavBar from \"/workspace/react-app/src/component/Navbar.jsx\";\nimport MyCardRepositories from \"/workspace/react-app/src/component/Card-repositories.jsx\";\nimport MyCardOrganisations from \"/workspace/react-app/src/component/Card-organisations.jsx\";\nimport Spinner from 'react-bootstrap/Spinner'\n\nfunction App() {\n    const [userInput, setUserInput] = useState();\n    const [arrayRepos, setArrayRepos] = useState();\n    const [arrayOrganisations, setArrayOrganisations] = useState();\n\n    const handleSearch = e => {\n        setUserInput(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        fetch(\"https://api.github.com/users/\" + userInput + \"/orgs\")\n            .then(function (response) {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then(function (responseAsJson) {\n                setArrayOrganisations(responseAsJson);\n               })\n            .catch(function (error) {\n                console.log('Looks like there was a problem: \\n', error);\n            });\n        fetch(\"https://api.github.com/users/\" + userInput + \"/repos\")\n            .then(function (response) {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then(function (responseAsJson) {\n                setArrayRepos(responseAsJson);\n               })\n            .catch(function (error) {\n                console.log('Looks like there was a problem: \\n', error);\n            });\n    };\n\n    return (\n        <div className=\"App\">\n            <MyNavBar />\n            <div className=\"input\">\n                <Form onSubmit={handleSubmit}>\n                    <Row className=\"justify-content-center mt-5 mb-5\">\n                        <Col className=\"my-1 col-sm-2 \">\n                            <Form.Label\n                                htmlFor=\"inlineFormInputName\"\n                                visuallyHidden>\n                                Name\n\t\t\t\t\t\t\t</Form.Label>\n                            <Form.Control\n                                id=\"inlineFormInputName\"\n                                placeholder=\"username\"\n                                onChange={handleSearch}\n                            />\n                        </Col>\n                        <Col className=\"my-1 col-1\">\n                            <Button type=\"submit\">Search</Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n            <div className=\"row justify-content-center mt-5 mb-5\">\n            </div>\n            <div className=\"row\">\n                <div className=\"col centered\">\n                    {arrayOrganisations ? arrayOrganisations.map((e, index) => {\n                        return <MyCardOrganisations key={index} data={e} />\n                    }) : userInput ? <Spinner animation=\"border\" /> : \"\"}\n                </div>\n                <div className=\"col\">\n                    {arrayRepos ? arrayRepos.map((e, index) => {\n                        return <MyCardRepositories key={index} data={e} />\n                    }) : userInput ? <Spinner animation=\"border\" /> : \"\"}\n                </div>\n            </div>\n        </div >\n\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}