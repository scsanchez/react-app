{"version":3,"sources":["component/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["MyNavBar","Navbar","bg","variant","Brand","href","src","width","height","className","alt","App","useState","name","setName","userName","setUserName","repositories","setRepositories","setRepositoriesUrl","organisations","setOrganisations","userInput","setUserInput","setError","console","log","Form","onSubmit","e","preventDefault","fetch","concat","then","res","json","data","message","login","repos_url","html_url","organizations_url","setData","Row","Col","Label","htmlFor","visuallyHidden","Control","sm","id","placeholder","onChange","target","value","Button","type","Card","style","Body","Title","Text","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPA6BeA,EAtBE,WACb,OACI,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,OAA3B,SACI,eAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,QAAnB,UACI,qBACIC,IAAI,wEACJC,MAAM,KACNC,OAAO,KACPC,UAAU,oCACVC,IAAI,mBAER,qBACIJ,IAAI,4EACJC,MAAM,KACNC,OAAO,KACPC,UAAU,oCACVC,IAAI,yBC8ETC,MAhGf,WACI,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAA8CN,mBAAS,IAAvD,mBAAwBO,GAAxB,WACA,EAA0CP,mBAAS,IAAnD,mBAAOQ,EAAP,KAAsBC,EAAtB,KACA,EAAkCT,mBAAS,IAA3C,mBAAOU,EAAP,KAAkBC,EAAlB,KACA,EAA0BX,mBAAS,IAAnC,mBAAcY,GAAd,WA+CA,OAxBAC,QAAQC,IAAIJ,GA0BR,sBAAKb,UAAU,MAAf,UACI,cAAC,EAAD,IACA,qBAAKA,UAAU,QAAf,SACI,cAACkB,EAAA,EAAD,CAAMC,SA3BG,SAACC,GAClBA,EAAEC,iBACFC,MAAM,gCAAgCC,OAAOV,IACxCW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACEA,EAAKC,QACLb,EAASY,EAAKC,SA7Bd,SAAC,GAMV,IALHxB,EAKE,EALFA,KACAyB,EAIE,EAJFA,MACAC,EAGE,EAHFA,UACAC,EAEE,EAFFA,SACAC,EACE,EADFA,kBAEA3B,EAAQD,GAERG,EAAYsB,GAEZpB,EAAgBqB,GAChBd,QAAQC,IAAIa,GACZlB,EAAiBoB,GACjBtB,EAAmBqB,GACnBf,QAAQC,IAAIc,GAgBAE,CAAQN,OAmBZ,SACI,eAACO,EAAA,EAAD,CAAKlC,UAAU,mCAAf,UACI,eAACmC,EAAA,EAAD,CAAKnC,UAAU,aAAf,UACI,cAACkB,EAAA,EAAKkB,MAAN,CACIC,QAAQ,sBACRC,gBAAc,EAFlB,kBAKA,cAACpB,EAAA,EAAKqB,QAAN,CACIC,GAAI,EACJC,GAAG,sBACHC,YAAY,qBACZC,SA5CP,SAAAvB,GACjBN,EAAaM,EAAEwB,OAAOC,aA8CN,cAACV,EAAA,EAAD,CAAKK,GAAI,EAAGxC,UAAU,OAAtB,SACI,cAAC8C,EAAA,EAAD,CAAQC,KAAK,SAAb,6BAKhB,qBAAK/C,UAAU,OAAf,SACI,cAACgD,EAAA,EAAD,CAAMC,MAAO,CAAEnD,MAAO,SAAtB,SACI,eAACkD,EAAA,EAAKE,KAAN,WACI,cAACF,EAAA,EAAKG,MAAN,UAAa7C,IACb,cAAC0C,EAAA,EAAKG,MAAN,UAAa/C,IACb,cAAC4C,EAAA,EAAKI,KAAN,UAAY5C,IACZ,cAACwC,EAAA,EAAKI,KAAN,UAAYzC,WAIxB,wBAAQX,UAAU,mBCnFfqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.54028bfc.chunk.js","sourcesContent":["import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\n\nconst MyNavBar = () => {\n    return (\n        <Navbar bg=\"light\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">\n                <img\n                    src=\"https://github.githubassets.com/images/modules/logos_page/Octocat.png\"\n                    width=\"80\"\n                    height=\"60\"\n                    className=\"d-inline-block align-items-center\"\n                    alt=\"Octopus GitHub\"\n                />\n                <img\n                    src=\"https://github.githubassets.com/images/modules/logos_page/GitHub-Logo.png\"\n                    width=\"80\"\n                    height=\"21\"\n                    className=\"d-inline-block align-items-center\"\n                    alt=\"Octopus GitHub\"\n                />\n            </Navbar.Brand>\n        </Navbar>\n    );\n};\nexport default MyNavBar;","import React, { useState, useEffect } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Card, Form, Col, Row } from \"react-bootstrap\";\nimport MyNavBar from \"/workspace/react-app/src/component/Navbar.js\";\n\nfunction App() {\n    const [name, setName] = useState(\"\");\n    const [userName, setUserName] = useState(\"\");\n    const [repositories, setRepositories] = useState(\"\");\n    const [repositoriesUrl, setRepositoriesUrl] = useState(\"\");\n    const [organisations, setOrganisations] = useState(\"\");\n    const [userInput, setUserInput] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const setData = ({\n        name,\n        login,\n        repos_url,\n        html_url,\n        organizations_url\n    }) => {\n        setName(name);\n       \n        setUserName(login);\n     \n        setRepositories(repos_url);\n        console.log(repos_url);\n        setOrganisations(organizations_url);\n        setRepositoriesUrl(html_url);\n        console.log(html_url);\n    };\n\n    const handleSearch = e => {\n        setUserInput(e.target.value);\n    };\n    console.log(userInput);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        fetch(\"https://api.github.com/users/\".concat(userInput))\n            .then(res => res.json())\n            .then(data => {\n                if (data.message) {\n                    setError(data.message);\n                } else {\n                    setData(data);\n                }\n            });\n    };\n\n    // useEffect(() => {\n    // \tfetch(\"https://api.github.com/users/scsanchez\")\n    // \t\t.then(res => res.json())\n    // \t\t.then(data => {\n    // \t\t\tconsole.log(data);\n    // \t\t\tsetData(data);\n    // \t\t});\n    // }, []);\n\n    return (\n              \n        <div className=\"App\">\n            <MyNavBar />\n            <div className=\"input\">\n                <Form onSubmit={handleSubmit}>\n                    <Row className=\"justify-content-center mt-5 mb-5\">\n                        <Col className=\"my-1 col-2\">\n                            <Form.Label\n                                htmlFor=\"inlineFormInputName\"\n                                visuallyHidden>\n                                Name\n\t\t\t\t\t\t\t</Form.Label>\n                            <Form.Control\n                                sm={3}\n                                id=\"inlineFormInputName\"\n                                placeholder=\"Introduce username\"\n                                onChange={handleSearch}\n                            />\n                        </Col>\n                        <Col sm={3} className=\"my-1\">\n                            <Button type=\"submit\">Submit</Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n            <div className=\"card\">\n                <Card style={{ width: \"18rem\" }}>\n                    <Card.Body>\n                        <Card.Title>{userName}</Card.Title>\n                        <Card.Title>{name}</Card.Title>\n                        <Card.Text>{repositories}</Card.Text>\n                        <Card.Text>{organisations}</Card.Text>\n                    </Card.Body>\n                </Card>\n            </div>\n            <header className=\"App-header\"></header>\n        </div>\n        \n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}