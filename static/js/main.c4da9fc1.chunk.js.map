{"version":3,"sources":["component/Navbar.jsx","component/Card.jsx","App.js","reportWebVitals.js","index.js"],"names":["MyNavBar","Navbar","bg","variant","Brand","href","src","width","height","className","alt","MyCard","props","data","console","log","Col","Row","Card","style","Body","Title","name","html_url","bio","Button","App","useState","userInput","setUserInput","setError","arrayRepos","setArrayRepos","setData","Form","onSubmit","e","preventDefault","fetch","then","res","json","message","Label","htmlFor","visuallyHidden","Control","id","placeholder","onChange","target","value","type","map","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4da9fc1.chunk.js","sourcesContent":["import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\n\nconst MyNavBar = () => {\n    return (\n        <Navbar bg=\"primary\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">\n                <img\n                    src=\"https://github.githubassets.com/images/modules/logos_page/Octocat.png\"\n                    width=\"80\"\n                    height=\"60\"\n                    className=\"d-inline-block align-items-center\"\n                    alt=\"Octopus GitHub\"\n                />\n                <img\n                    src=\"https://github.githubassets.com/images/modules/logos_page/GitHub-Logo.png\"\n                    width=\"80\"\n                    height=\"21\"\n                    className=\"d-inline-block align-items-center\"\n                    alt=\"GitHub\"\n                />\n            </Navbar.Brand>\n        </Navbar>\n    );\n};\nexport default MyNavBar;","import React, { useState, useEffect, useContext } from \"react\";\nimport { Button, Card, Form, Col, Row } from \"react-bootstrap\";\n\nconst MyCard = (props) => {\n    const data = props.data\n    console.log(data)\n    return (\n        <div className=\"card col-6\">\n\n            <Col>\n                <Row className=\"justify-content-center mt-5 mb-5\">\n                    <Card style={{ width: \"18rem\" }}>\n                        <Card.Body>\n                            <Card.Title>{data.name}</Card.Title>\n                            <Card.Title>{data.html_url}</Card.Title>\n                            <Card.Title>{data.bio}</Card.Title>\n                            <Button href={data.html_url} variant=\"primary\">Go</Button>\n                        </Card.Body>\n                    </Card>\n                </Row>\n            </Col>\n        </div>\n    );\n};\n\nexport default MyCard;\n\n","import React, { useState, useEffect } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Card, Form, Col, Row } from \"react-bootstrap\";\nimport MyNavBar from \"/workspace/react-app/src/component/Navbar.jsx\";\nimport MyCard from \"/workspace/react-app/src/component/Card.jsx\";\n\nfunction App() {\n    const [name, setName] = useState(\"\");\n    const [userName, setUserName] = useState(\"\");\n    const [bio, setBio] = useState(\"\");\n    const [repositories, setRepositories] = useState(\"\");\n    const [repositoriesUrl, setRepositoriesUrl] = useState(\"\");\n    const [organisations, setOrganisations] = useState(\"\");\n    const [userInput, setUserInput] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [arrayRepos, setArrayRepos] = useState();\n    const [data, setData] = useState();\n\n    const handleSearch = e => {\n        setUserInput(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        fetch(\"https://api.github.com/users/\" + userInput)\n            .then(res => res.json())\n            .then(data => {\n                if (data.message) {\n                    setError(data.message);\n                } else {\n                    setData(data);\n                }\n            });\n        fetch(\"https://api.github.com/users/\" + userInput + \"/repos\")\n            .then(res => res.json())\n            .then(data => {\n                if (data.message) {\n                    setError(data.message);\n                } else {\n                    setArrayRepos(data);\n                }\n            });\n    };\n\n    return (\n        <div className=\"App col-12\">\n            <MyNavBar />\n            <div className=\"input\">\n\n                <Form onSubmit={handleSubmit}>\n                    <Row className=\"justify-content-center mt-5 mb-5\">\n                        <Col className=\"my-1 col-sm-2 \">\n                            <Form.Label\n                                htmlFor=\"inlineFormInputName\"\n                                visuallyHidden>\n                                Name\n\t\t\t\t\t\t\t</Form.Label>\n                            <Form.Control\n                                id=\"inlineFormInputName\"\n                                placeholder=\"username\"\n                                onChange={handleSearch}\n                            />\n                        </Col>\n                        <Col className=\"my-1 col-1\">\n                            <Button type=\"submit\">Search</Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n            <div className=\"row justify-content-center mt-5 mb-5\">\n            </div>\n            <div className=\"row\">\n                {arrayRepos ? arrayRepos.map((e, index) => {\n                    return <MyCard key={index} data={e} />\n                }) : \"\"}\n            </div>\n            <header className=\"App-header\"></header>\n        </div >\n\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}